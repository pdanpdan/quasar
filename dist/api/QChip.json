{
  "type": "component",
  "props": {
    "ripple": {
      "type": [
        "Boolean",
        "Object"
      ],
      "desc": "Configure material ripple (disable it by setting it to 'false' or supply a config object)",
      "default": true,
      "examples": [
        false,
        "{ center: true, color: 'teal' }"
      ]
    },
    "dense": {
      "type": "Boolean",
      "desc": "Dense mode; occupies less space"
    },
    "icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention; make sure you have the icon library installed",
      "examples": [
        "map",
        "ion-add"
      ]
    },
    "icon-right": {
      "type": "String",
      "desc": "Icon name following Quasar convention; make sure you have the icon library installed",
      "examples": [
        "map",
        "ion-add"
      ]
    },
    "label": {
      "type": [
        "String",
        "Number"
      ],
      "desc": "Chip's content as string; overrides default slot if specified",
      "examples": [
        "John Doe",
        "Book"
      ]
    },
    "color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ]
    },
    "text-color": {
      "type": "String",
      "desc": "Overrides text color (if needed); color name from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ]
    },
    "value": {
      "type": "Boolean",
      "desc": "Model of the component determining if QChip should be rendered or not",
      "default": true
    },
    "selected": {
      "type": "Boolean",
      "sync": true,
      "desc": "Model for QChip if it's selected or not"
    },
    "square": {
      "type": "Boolean",
      "desc": "Removes border-radius so borders are squared"
    },
    "outline": {
      "type": "Boolean",
      "desc": "Display using the 'outline' design"
    },
    "clickable": {
      "type": "Boolean",
      "desc": "Is QChip clickable? If it's the case, then it will add hover effects and emit 'click' events"
    },
    "removable": {
      "type": "Boolean",
      "desc": "If set, then it displays a 'remove' icon that when clicked the QChip emits 'remove' event"
    },
    "tabindex": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Tabindex HTML attribute value",
      "examples": [
        "0",
        "100"
      ]
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode"
    }
  },
  "slots": {
    "default": {
      "desc": "This is where QChip content goes, if not using 'label' property"
    }
  },
  "events": {
    "click": {
      "desc": "Emitted on QChip click if 'clickable' property is set",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object"
        }
      }
    },
    "update:selected": {
      "desc": "Used by Vue on 'selected.sync' prop for updating its value",
      "params": {
        "state": {
          "type": "Boolean",
          "desc": "Selected state"
        }
      }
    },
    "remove": {
      "desc": "Works along with 'value' and 'removable' prop. Emitted when toggling rendering state of the QChip",
      "params": {
        "state": {
          "type": "Boolean",
          "desc": "Render state (render or not)"
        }
      }
    }
  }
}