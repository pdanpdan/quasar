{
  "type": "component",
  "behavior": {
    "$listeners": {
      "desc": "All native events are being propagated (you don't need the '.native' modifier)"
    }
  },
  "props": {
    "value": {
      "desc": "Date of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive",
      "type": "String",
      "examples": [
        "v-model=\"myDate\""
      ]
    },
    "landscape": {
      "type": "Boolean",
      "desc": "Display the component in landscape mode"
    },
    "color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ]
    },
    "text-color": {
      "type": "String",
      "desc": "Overrides text color (if needed); color name from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ]
    },
    "dark": {
      "type": "Boolean",
      "desc": "Notify the component that the background is a dark color"
    },
    "readonly": {
      "type": "Boolean",
      "desc": "Put component in readonly mode"
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode"
    },
    "calendar": {
      "type": "String",
      "desc": "Specify calendar type",
      "default": "gregorian",
      "values": [
        "gregorian",
        "persian"
      ]
    },
    "default-year-month": {
      "type": "String",
      "desc": "The default year and month to display (in YYYY/MM format) when model is unfilled (undefined or null)",
      "examples": [
        "1986/02"
      ]
    },
    "events": {
      "type": [
        "Array",
        "Function"
      ],
      "desc": "A list of events to highlight on the calendar; If using a function, it receives the date as a String and must return a Boolean (matches or not)",
      "examples": [
        ":events=\"['2018/11/05', '2018/11/06', '2018/11/09', '2018/11/23']\"",
        ":events=\"date => date[9] % 3 === 0\""
      ]
    },
    "event-color": {
      "type": [
        "String",
        "Function"
      ],
      "desc": "Color name (from the Quasar Color Palette); If using a function, it receives the date as a String and must return a String (color for the received date)",
      "examples": [
        "teal-10",
        ":event-color=\"(date) => date[9] % 2 === 0 ? 'teal' : 'orange'\""
      ]
    },
    "options": {
      "type": [
        "Array",
        "Function"
      ],
      "desc": "Optionally configure the days that are selectable; If using a function, it receives the date as a String and must return a Boolean (is date acceptable or not)",
      "examples": [
        ":options=\"['2018/11/05', '2018/11/12', '2018/11/19', '2018/11/26' ]\"",
        ":options=\"date => date[9] % 3 === 0\"",
        ":options=\"date => date >= '2018/11/03' && date <= '2018/11/15'\""
      ]
    },
    "first-day-of-week": {
      "type": [
        "String",
        "Number"
      ],
      "desc": "Sets the day of the week that is considered the first day (0 - Sunday, 1 - Monday, ...); This day will show in the left-most column of the calendar",
      "default": "(based on configured Quasar lang language)",
      "examples": [
        "first-day-of-week=\"1\"",
        ":first-day-of-week=\"selectedFirstDayOfTheWeek\""
      ]
    },
    "today-btn": {
      "type": "Boolean",
      "desc": "Display a button that selects the current day"
    },
    "minimal": {
      "type": "Boolean",
      "desc": "Donâ€™t display the header"
    }
  },
  "events": {
    "input": {
      "desc": "Emitted when component's model changes; Is also used by v-model",
      "params": {
        "value": {
          "type": "String",
          "desc": "New model value",
          "required": true
        }
      },
      "type": "String"
    }
  }
}