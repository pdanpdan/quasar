{
  "type": "component",
  "props": {
    "value": {
      "type": "Number",
      "desc": "Model of the component (must be between min/max); Either use this property (along with a listener for 'input' event) OR use v-model directive",
      "examples": [
        "v-model=\"positionModel\""
      ]
    },
    "min": {
      "type": "Number",
      "desc": "Minimum value of the model",
      "default": 0,
      "examples": [
        ":min=\"0\""
      ]
    },
    "max": {
      "type": "Number",
      "desc": "Maximum value of the model",
      "default": 100,
      "examples": [
        ":max=\"100\""
      ]
    },
    "step": {
      "type": "Number",
      "desc": "Specify step amount between valid values (> 0.0); When step equals to 0 it defines infinite granularity",
      "default": 1,
      "examples": [
        ":step=\"1\""
      ]
    },
    "color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ]
    },
    "label": {
      "type": "Boolean",
      "desc": "Popup a label when user clicks/taps on the slider thumb and moves it"
    },
    "label-color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ]
    },
    "label-always": {
      "type": "Boolean",
      "desc": "Always display the label"
    },
    "markers": {
      "type": "Boolean",
      "desc": "Display markers on the track, one for each possible value for the model"
    },
    "snap": {
      "type": "Boolean",
      "desc": "Snap on valid values, rather than sliding freely; Suggestion: use with 'step' prop"
    },
    "dark": {
      "type": "Boolean",
      "desc": "Notify the component that the background is a dark color"
    },
    "dense": {
      "type": "Boolean",
      "desc": "Dense mode; occupies less space"
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode"
    },
    "readonly": {
      "type": "Boolean",
      "desc": "Put component in readonly mode"
    },
    "tabindex": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Tabindex HTML attribute value",
      "examples": [
        "0",
        "100"
      ]
    }
  },
  "events": {
    "input": {
      "desc": "Emitted when component's model changes; Is also used by v-model",
      "params": {
        "value": {
          "type": "Any",
          "desc": "New model value",
          "required": true
        }
      }
    },
    "change": {
      "desc": "Emitted on lazy model value change (after user slides then releases the thumb)",
      "params": {
        "value": {
          "type": "Any",
          "desc": "New model value",
          "required": true
        }
      }
    }
  }
}