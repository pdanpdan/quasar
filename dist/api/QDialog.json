{
  "type": "component",
  "props": {
    "content-class": {
      "type": [
        "Array",
        "String",
        "Object"
      ],
      "desc": "Class definitions to be attributed to the content",
      "examples": [
        "my-special-class",
        ":content-class=\"{ 'my-special-class': <condition> }\""
      ]
    },
    "content-style": {
      "type": [
        "Array",
        "String",
        "Object"
      ],
      "desc": "Style definitions to be attributed to the content",
      "examples": [
        "background-color: #ff0000",
        ":content-style=\"{ color: '#ff0000' }\""
      ]
    },
    "value": {
      "type": "Boolean",
      "desc": "Model of the component defining shown/hidden state; Either use this property (along with a listener for 'input' event) OR use v-model directive"
    },
    "persistent": {
      "type": "Boolean",
      "desc": "User cannot dismiss Dialog if clicking outside of it or hitting ESC key; Also, an app route change won't dismiss it"
    },
    "no-esc-dismiss": {
      "type": "Boolean",
      "desc": "User cannot dismiss Dialog by hitting ESC key; No need to set it if 'persistent' prop is also set"
    },
    "no-backdrop-dismiss": {
      "type": "Boolean",
      "desc": "User cannot dismiss Dialog by clicking outside of it; No need to set it if 'persistent' prop is also set"
    },
    "no-route-dismiss": {
      "type": "Boolean",
      "desc": "Changing route app won't dismiss Dialog; No need to set it if 'persistent' prop is also set"
    },
    "seamless": {
      "type": "Boolean",
      "desc": "Put Dialog into seamless mode; Does not use a backdrop so user is able to interact with the rest of the page too"
    },
    "maximized": {
      "type": "Boolean",
      "desc": "Put Dialog into maximized mode"
    },
    "full-width": {
      "type": "Boolean",
      "desc": "Dialog will try to render with same width as the window"
    },
    "full-height": {
      "type": "Boolean",
      "desc": "Dialog will try to render with same height as the window"
    },
    "position": {
      "type": "String",
      "desc": "",
      "default": "standard",
      "values": [
        "standard",
        "top",
        "right",
        "bottom",
        "left"
      ],
      "examples": [
        "top",
        "right"
      ]
    },
    "transition-show": {
      "type": "String",
      "desc": "One of Quasar's embedded transitions",
      "examples": [
        "fade",
        "slide-down"
      ],
      "default": "scale"
    },
    "transition-hide": {
      "type": "String",
      "desc": "One of Quasar's embedded transitions",
      "examples": [
        "fade",
        "slide-down"
      ],
      "default": "scale"
    },
    "no-refocus": {
      "type": "Boolean",
      "desc": "(Accessibility) When Dialog gets hidden, do not refocus on the DOM element that previously had focus"
    }
  },
  "events": {
    "input": {
      "desc": "Emitted when showing/hidden state changes; Is also used by v-model",
      "params": {
        "value": {
          "type": "Boolean",
          "desc": "New state (showing/hidden)"
        }
      }
    },
    "show": {
      "desc": "Emitted after component has triggered show()",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object",
          "required": true
        }
      }
    },
    "before-show": {
      "desc": "Emitted when component triggers show() but before it finishes doing it",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object",
          "required": true
        }
      }
    },
    "hide": {
      "desc": "Emitted after component has triggered hide()",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object",
          "required": true
        }
      }
    },
    "before-hide": {
      "desc": "Emitted when component triggers hide() but before it finishes doing it",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object",
          "required": true
        }
      }
    },
    "shake": {
      "desc": "Shakes up the Dialog in order to catch user's attention"
    },
    "escape-key": {
      "desc": "Emitted when ESC key is pressed; Does not gets emitted if Dialog is 'persistent' or it has 'no-esc-key' set"
    }
  },
  "methods": {
    "show": {
      "desc": "Triggers component to show",
      "params": {
        "evt": {
          "type": "Object",
          "required": false,
          "desc": "JS event object"
        }
      }
    },
    "hide": {
      "desc": "Triggers component to hide",
      "params": {
        "evt": {
          "type": "Object",
          "required": false,
          "desc": "JS event object"
        }
      }
    },
    "toggle": {
      "params": {
        "evt": {
          "type": "Object",
          "required": false,
          "desc": "JS event object"
        }
      },
      "desc": "Triggers component to toggle between show/hide"
    }
  }
}