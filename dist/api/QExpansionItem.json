{
  "type": "component",
  "props": {
    "to": {
      "type": [
        "String",
        "Object"
      ],
      "desc": "Equivalent to Vue Router <router-link> 'to' property",
      "examples": [
        "/home/dashboard",
        ":to=\"{ name: 'my-route-name' }\""
      ]
    },
    "exact": {
      "type": "Boolean",
      "desc": "Equivalent to Vue Router <router-link> 'exact' property"
    },
    "append": {
      "type": "Boolean",
      "desc": "Equivalent to Vue Router <router-link> 'append' property"
    },
    "replace": {
      "type": "Boolean",
      "desc": "Equivalent to Vue Router <router-link> 'replace' property"
    },
    "active-class": {
      "type": "String",
      "desc": "Equivalent to Vue Router <router-link> 'active-class' property",
      "examples": [
        "my-active-class"
      ]
    },
    "exact-active-class": {
      "type": "String",
      "desc": "Equivalent to Vue Router <router-link> 'active-class' property",
      "examples": [
        "my-exact-active-class"
      ]
    },
    "value": {
      "type": "Boolean",
      "desc": "Model of the component defining 'open' state; Either use this property (along with a listener for 'input' event) OR use v-model directive"
    },
    "icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention; make sure you have the icon library installed",
      "examples": [
        "map",
        "ion-add"
      ]
    },
    "expand-icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention; make sure you have the icon library installed",
      "examples": [
        "map",
        "ion-add"
      ]
    },
    "expand-icon-class": {
      "type": [
        "Array",
        "String",
        "Object"
      ],
      "desc": "Apply custom class(es) to the expand icon item section",
      "examples": [
        "text-purple"
      ]
    },
    "label": {
      "type": "String",
      "desc": "Header label (unless using 'header' slot)",
      "examples": [
        "My expansion item"
      ]
    },
    "caption": {
      "type": "String",
      "desc": "Header sub-label (unless using 'header' slot)",
      "examples": [
        "Unread message: 5"
      ]
    },
    "dark": {
      "type": "Boolean",
      "desc": "Notify the component that the background is a dark color"
    },
    "dense": {
      "type": "Boolean",
      "desc": "Dense mode; occupies less space"
    },
    "duration": {
      "type": "Number",
      "desc": "Animation duration (in milliseconds)",
      "default": 300,
      "examples": [
        ":duration=\"1000\""
      ]
    },
    "header-inset-level": {
      "type": "Number",
      "desc": "Apply an inset to header (unless using 'header' slot); Useful when header avatar/left side is missing but you want to align content with other items that do have a left side, or when you're building a menu",
      "examples": [
        ":header-inset-level=\"1\""
      ]
    },
    "content-inset-level": {
      "type": "Number",
      "desc": "Apply an inset to content (changes content padding)",
      "examples": [
        ":content-inset-level=\"1\""
      ]
    },
    "expand-separator": {
      "type": "Boolean",
      "desc": "Apply a top and bottom separator when expansion item is opened"
    },
    "default-opened": {
      "type": "Boolean",
      "desc": "Puts expansion item into open state on initial render; Overriden by v-model if used"
    },
    "expand-icon-toggle": {
      "type": "Boolean",
      "desc": "Applies the expansion events to the expand icon only and not to the whole header"
    },
    "switch-toggle-side": {
      "type": "Boolean",
      "desc": "Switch expand icon side (from default 'right' to 'left')"
    },
    "dense-toggle": {
      "type": "Boolean",
      "desc": "Use dense mode for expand icon"
    },
    "group": {
      "type": "String",
      "desc": "Register expansion item into a group (unique name that must be applied to all expansion items in that group) for coordinated open/close state within the group a.k.a. 'accordion mode'",
      "examples": [
        "my-emails"
      ]
    },
    "popup": {
      "type": "Boolean",
      "desc": "Put expansion list into 'popup' mode"
    },
    "header-style": {
      "type": [
        "Array",
        "String",
        "Object"
      ],
      "desc": "Apply custom style to the header",
      "examples": [
        "background: '#ff0000'",
        ":header-style=\"{ backgroundColor: '#ff0000' }\""
      ]
    },
    "header-class": {
      "type": [
        "Array",
        "String",
        "Object"
      ],
      "desc": "Apply custom class(es) to the header",
      "examples": [
        "my-custom-class",
        ":header-class=\"{ 'my-custom-class': someCondition }\""
      ]
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode"
    }
  },
  "events": {
    "input": {
      "desc": "Emitted when showing/hidden state changes; Is also used by v-model",
      "params": {
        "value": {
          "type": "Boolean",
          "desc": "New state (showing/hidden)"
        }
      }
    },
    "show": {
      "desc": "Emitted after component has triggered show()",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object",
          "required": true
        }
      }
    },
    "before-show": {
      "desc": "Emitted when component triggers show() but before it finishes doing it",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object",
          "required": true
        }
      }
    },
    "hide": {
      "desc": "Emitted after component has triggered hide()",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object",
          "required": true
        }
      }
    },
    "before-hide": {
      "desc": "Emitted when component triggers hide() but before it finishes doing it",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object",
          "required": true
        }
      }
    }
  },
  "methods": {
    "show": {
      "desc": "Triggers component to show",
      "params": {
        "evt": {
          "type": "Object",
          "required": false,
          "desc": "JS event object"
        }
      }
    },
    "hide": {
      "desc": "Triggers component to hide",
      "params": {
        "evt": {
          "type": "Object",
          "required": false,
          "desc": "JS event object"
        }
      }
    },
    "toggle": {
      "params": {
        "evt": {
          "type": "Object",
          "required": false,
          "desc": "JS event object"
        }
      },
      "desc": "Triggers component to toggle between show/hide"
    }
  },
  "slots": {
    "default": {
      "desc": "Slot used for expansion item's content"
    },
    "header": {
      "desc": "Slot used for overriding default header"
    }
  }
}